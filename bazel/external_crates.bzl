"""
This module declares all direct rust dependencies.

Run `./bin/bazel-pin.sh` from the top-level directory of the working tree after changing this file
to regenerate Cargo Bazel lockfiles.
"""

load("@rules_rust//crate_universe:defs.bzl", "crate", "crates_repository", "splicing_config")
load("//bazel:fuzz_testing.bzl", "DEFAULT_RUSTC_FLAGS_FOR_FUZZING")

def sanitize_external_crates(sanitizers_enabled):
    FUZZING_ANNOTATION = [crate.annotation(rustc_flags = DEFAULT_RUSTC_FLAGS_FOR_FUZZING)] if sanitizers_enabled else []
    return {
        "candid": FUZZING_ANNOTATION,
        "wasmtime": FUZZING_ANNOTATION,
        "bitcoin": FUZZING_ANNOTATION,
        "bincode": FUZZING_ANNOTATION,
        "hex": FUZZING_ANNOTATION,
        "subtle": FUZZING_ANNOTATION,
    }

def external_crates_repository(name, static_openssl, cargo_lockfile, lockfile, sanitizers_enabled):
    CRATE_ANNOTATIONS = {
        "ic_bls12_381": [crate.annotation(
            rustc_flags = [
                "-C",
                "opt-level=3",
            ],
        )],
        "ring": [crate.annotation(
            build_script_env = {
                "CFLAGS": "-fdebug-prefix-map=$${pwd}=/source",
            },
        )],
        "ic-wasm": [crate.annotation(
            gen_binaries = True,
        )],
        "openssl-sys": [crate.annotation(
            build_script_data = [
                "@openssl//:gen_dir",
                "@openssl//:openssl",
            ],
            # https://github.com/sfackler/rust-openssl/tree/master/openssl-sys/build
            build_script_data_glob = ["build/**/*.c"],
            build_script_env = {
                "OPENSSL_DIR": "$(execpath @openssl//:gen_dir)",
                "OPENSSL_STATIC": "true",
            },
            data = ["@openssl"],
            deps = ["@openssl"],
        )] if static_openssl or sanitizers_enabled else [],
        "librocksdb-sys": [crate.annotation(
            build_script_env = {
                # Bazel executors assign only one core when executing
                # the build script, making rocksdb compilation
                # extremely slow. Bazel doesn't provide any way to
                # override this settings so we cheat by starting more
                # processes in parallel.
                #
                # See IDX-2406.
                "NUM_JOBS": "8",
            },
        )],
        "pprof": [crate.annotation(
            build_script_data = [
                "@com_google_protobuf//:protoc",
            ],
            build_script_env = {
                "PROTOC": "$(execpath @com_google_protobuf//:protoc)",
            },
        )],
        "prost-build": [crate.annotation(
            build_script_env = {
                "PROTOC_NO_VENDOR": "1",
            },
        )],
    }
    CRATE_ANNOTATIONS.update(sanitize_external_crates(sanitizers_enabled = sanitizers_enabled))
    crates_repository(
        name = name,
        isolated = True,
        cargo_lockfile = cargo_lockfile,
        lockfile = lockfile,
        cargo_config = "//:bazel/cargo.config",
        manifests = [
            "//:Cargo.toml",
            "//packages/ic-ledger-hash-of:Cargo.toml",
            "//packages/ic-starter-tests:Cargo.toml",
            "//packages/ic-vetkd-utils:Cargo.toml",
            "//packages/icrc-ledger-agent:Cargo.toml",
            "//packages/icrc-ledger-client-cdk:Cargo.toml",
            "//packages/icrc-ledger-client:Cargo.toml",
            "//packages/icrc-ledger-types:Cargo.toml",
            "//packages/pocket-ic:Cargo.toml",
            "//rs/artifact_manager:Cargo.toml",
            "//rs/artifact_pool:Cargo.toml",
            "//rs/async_utils:Cargo.toml",
            "//rs/backup:Cargo.toml",
            "//rs/bazelifier:Cargo.toml",
            "//rs/bitcoin/adapter:Cargo.toml",
            "//rs/bitcoin/ckbtc/agent:Cargo.toml",
            "//rs/bitcoin/ckbtc/kyt:Cargo.toml",
            "//rs/bitcoin/ckbtc/minter:Cargo.toml",
            "//rs/bitcoin/client:Cargo.toml",
            "//rs/bitcoin/consensus:Cargo.toml",
            "//rs/bitcoin/mock:Cargo.toml",
            "//rs/bitcoin/service:Cargo.toml",
            "//rs/bitcoin/types/internal:Cargo.toml",
            "//rs/boundary_node/canary_proxy:Cargo.toml",
            "//rs/boundary_node/certificate_issuance/certificate_issuer:Cargo.toml",
            "//rs/boundary_node/certificate_issuance/certificate_orchestrator:Cargo.toml",
            "//rs/boundary_node/certificate_issuance/certificate_syncer:Cargo.toml",
            "//rs/boundary_node/control_plane:Cargo.toml",
            "//rs/boundary_node/denylist_updater:Cargo.toml",
            "//rs/boundary_node/discower_bowndary:Cargo.toml",
            "//rs/boundary_node/ic_balance_exporter:Cargo.toml",
            "//rs/boundary_node/ic_boundary:Cargo.toml",
            "//rs/boundary_node/icx_proxy:Cargo.toml",
            "//rs/boundary_node/prober:Cargo.toml",
            "//rs/boundary_node/systemd_journal_gatewayd_shim:Cargo.toml",
            "//rs/canister_client/sender:Cargo.toml",
            "//rs/canister_client:Cargo.toml",
            "//rs/canister_sandbox/backend_lib:Cargo.toml",
            "//rs/canister_sandbox/common:Cargo.toml",
            "//rs/canister_sandbox/replica_controller:Cargo.toml",
            "//rs/canister_sandbox/sandbox_launcher:Cargo.toml",
            "//rs/canister_sandbox:Cargo.toml",
            "//rs/canonical_state/tree_hash/test_utils:Cargo.toml",
            "//rs/canonical_state/tree_hash:Cargo.toml",
            "//rs/canonical_state:Cargo.toml",
            "//rs/certification/test-utils:Cargo.toml",
            "//rs/certification:Cargo.toml",
            "//rs/config:Cargo.toml",
            "//rs/consensus/mocks:Cargo.toml",
            "//rs/consensus/utils:Cargo.toml",
            "//rs/consensus:Cargo.toml",
            "//rs/constants:Cargo.toml",
            "//rs/criterion_time:Cargo.toml",
            "//rs/crypto/ecdsa_secp256k1:Cargo.toml",
            "//rs/crypto/ecdsa_secp256r1:Cargo.toml",
            "//rs/crypto/extended_bip32:Cargo.toml",
            "//rs/crypto/for_verification_only:Cargo.toml",
            "//rs/crypto/getrandom_for_wasm:Cargo.toml",
            "//rs/crypto/iccsa:Cargo.toml",
            "//rs/crypto/internal/crypto_lib/basic_sig/der_utils:Cargo.toml",
            "//rs/crypto/internal/crypto_lib/basic_sig/ecdsa_secp256k1:Cargo.toml",
            "//rs/crypto/internal/crypto_lib/basic_sig/ecdsa_secp256r1:Cargo.toml",
            "//rs/crypto/internal/crypto_lib/basic_sig/ed25519:Cargo.toml",
            "//rs/crypto/internal/crypto_lib/basic_sig/iccsa/test_utils:Cargo.toml",
            "//rs/crypto/internal/crypto_lib/basic_sig/iccsa:Cargo.toml",
            "//rs/crypto/internal/crypto_lib/basic_sig/rsa_pkcs1:Cargo.toml",
            "//rs/crypto/internal/crypto_lib/bls12_381/type:Cargo.toml",
            "//rs/crypto/internal/crypto_lib/bls12_381/vetkd:Cargo.toml",
            "//rs/crypto/internal/crypto_lib/hmac:Cargo.toml",
            "//rs/crypto/internal/crypto_lib/multi_sig/bls12_381:Cargo.toml",
            "//rs/crypto/internal/crypto_lib/seed:Cargo.toml",
            "//rs/crypto/internal/crypto_lib/sha2:Cargo.toml",
            "//rs/crypto/internal/crypto_lib/threshold_sig/bls12_381/der_utils:Cargo.toml",
            "//rs/crypto/internal/crypto_lib/threshold_sig/bls12_381:Cargo.toml",
            "//rs/crypto/internal/crypto_lib/threshold_sig/tecdsa:Cargo.toml",
            "//rs/crypto/internal/crypto_lib/tls:Cargo.toml",
            "//rs/crypto/internal/crypto_lib/types:Cargo.toml",
            "//rs/crypto/internal/crypto_service_provider/protobuf_generator:Cargo.toml",
            "//rs/crypto/internal/crypto_service_provider:Cargo.toml",
            "//rs/crypto/internal/csp_test_utils:Cargo.toml",
            "//rs/crypto/internal/logmon:Cargo.toml",
            "//rs/crypto/internal/test_vectors:Cargo.toml",
            "//rs/crypto/node_key_generation:Cargo.toml",
            "//rs/crypto/node_key_validation:Cargo.toml",
            "//rs/crypto/prng:Cargo.toml",
            "//rs/crypto/secrets_containers:Cargo.toml",
            "//rs/crypto/sha2:Cargo.toml",
            "//rs/crypto/tecdsa:Cargo.toml",
            "//rs/crypto/temp_crypto:Cargo.toml",
            "//rs/crypto/test_utils/canister_sigs:Cargo.toml",
            "//rs/crypto/test_utils/canister_threshold_sigs:Cargo.toml",
            "//rs/crypto/test_utils/metrics:Cargo.toml",
            "//rs/crypto/test_utils/ni-dkg:Cargo.toml",
            "//rs/crypto/test_utils/reproducible_rng:Cargo.toml",
            "//rs/crypto/test_utils/tls:Cargo.toml",
            "//rs/crypto/test_utils:Cargo.toml",
            "//rs/crypto/tls_interfaces/mocks:Cargo.toml",
            "//rs/crypto/tls_interfaces:Cargo.toml",
            "//rs/crypto/tree_hash/test_utils:Cargo.toml",
            "//rs/crypto/tree_hash:Cargo.toml",
            "//rs/crypto/utils/basic_sig:Cargo.toml",
            "//rs/crypto/utils/threshold_sig:Cargo.toml",
            "//rs/crypto/utils/threshold_sig_der:Cargo.toml",
            "//rs/crypto/utils/tls:Cargo.toml",
            "//rs/crypto:Cargo.toml",
            "//rs/cup_explorer:Cargo.toml",
            "//rs/cycles_account_manager:Cargo.toml",
            "//rs/depcheck:Cargo.toml",
            "//rs/determinism_test:Cargo.toml",
            "//rs/drun:Cargo.toml",
            "//rs/elastic_common_schema:Cargo.toml",
            "//rs/embedders:Cargo.toml",
            "//rs/ethereum/cketh/minter:Cargo.toml",
            "//rs/execution_environment:Cargo.toml",
            "//rs/execution_environment:benches/lib/Cargo.toml",
            "//rs/http_endpoints/metrics:Cargo.toml",
            "//rs/http_endpoints/public:Cargo.toml",
            "//rs/http_utils:Cargo.toml",
            "//rs/https_outcalls/adapter:Cargo.toml",
            "//rs/https_outcalls/client:Cargo.toml",
            "//rs/https_outcalls/consensus:Cargo.toml",
            "//rs/https_outcalls/service:Cargo.toml",
            "//rs/ic_os/deterministic_ips:Cargo.toml",
            "//rs/ic_os/guestos_tool:Cargo.toml",
            "//rs/ic_os/launch-single-vm:Cargo.toml",
            "//rs/ic_os/partition_tools:Cargo.toml",
            "//rs/ic_os/setupos-disable-checks:Cargo.toml",
            "//rs/ic_os/setupos-inject-configuration:Cargo.toml",
            "//rs/ic_os/sev:Cargo.toml",
            "//rs/ic_os/sev_interfaces:Cargo.toml",
            "//rs/ic_os/snptool:Cargo.toml",
            "//rs/ic_os/vsock/guest:Cargo.toml",
            "//rs/ic_os/vsock/host:Cargo.toml",
            "//rs/ic_os/vsock/vsock_lib:Cargo.toml",
            "//rs/ic_p8s_service_discovery/log:Cargo.toml",
            "//rs/ic_p8s_service_discovery:Cargo.toml",
            "//rs/identity:Cargo.toml",
            "//rs/ingress_manager:Cargo.toml",
            "//rs/interfaces/adapter_client:Cargo.toml",
            "//rs/interfaces/registry/mocks:Cargo.toml",
            "//rs/interfaces/registry:Cargo.toml",
            "//rs/interfaces/state_manager/mocks:Cargo.toml",
            "//rs/interfaces/state_manager:Cargo.toml",
            "//rs/interfaces/transport/mocks:Cargo.toml",
            "//rs/interfaces/transport:Cargo.toml",
            "//rs/interfaces:Cargo.toml",
            "//rs/memory_tracker:Cargo.toml",
            "//rs/messaging:Cargo.toml",
            "//rs/monitoring/adapter_metrics:Cargo.toml",
            "//rs/monitoring/adapter_metrics_service:Cargo.toml",
            "//rs/monitoring/backtrace:Cargo.toml",
            "//rs/monitoring/context_logger:Cargo.toml",
            "//rs/monitoring/logger:Cargo.toml",
            "//rs/monitoring/metrics:Cargo.toml",
            "//rs/monitoring/pprof:Cargo.toml",
            "//rs/nervous_system/clients:Cargo.toml",
            "//rs/nervous_system/common/build_metadata:Cargo.toml",
            "//rs/nervous_system/common/test_canister:Cargo.toml",
            "//rs/nervous_system/common/test_keys:Cargo.toml",
            "//rs/nervous_system/common/test_utils:Cargo.toml",
            "//rs/nervous_system/common:Cargo.toml",
            "//rs/nervous_system/humanize:Cargo.toml",
            "//rs/nervous_system/proto/protobuf_generator:Cargo.toml",
            "//rs/nervous_system/proto:Cargo.toml",
            "//rs/nervous_system/proxied_canister_calls_tracker:Cargo.toml",
            "//rs/nervous_system/root:Cargo.toml",
            "//rs/nervous_system/runtime:Cargo.toml",
            "//rs/nns/cmc:Cargo.toml",
            "//rs/nns/common/protobuf_generator:Cargo.toml",
            "//rs/nns/common:Cargo.toml",
            "//rs/nns/constants:Cargo.toml",
            "//rs/nns/governance/protobuf_generator:Cargo.toml",
            "//rs/nns/governance:Cargo.toml",
            "//rs/nns/gtc/protobuf_generator:Cargo.toml",
            "//rs/nns/gtc:Cargo.toml",
            "//rs/nns/gtc_accounts:Cargo.toml",
            "//rs/nns/handlers/lifeline/impl:Cargo.toml",
            "//rs/nns/handlers/lifeline/interface:Cargo.toml",
            "//rs/nns/handlers/root/impl/protobuf_generator:Cargo.toml",
            "//rs/nns/handlers/root/impl:Cargo.toml",
            "//rs/nns/handlers/root/interface:Cargo.toml",
            "//rs/nns/identity:Cargo.toml",
            "//rs/nns/init:Cargo.toml",
            "//rs/nns/inspector:Cargo.toml",
            "//rs/nns/integration_tests:Cargo.toml",
            "//rs/nns/nns-ui:Cargo.toml",
            "//rs/nns/sns-wasm/protobuf_generator:Cargo.toml",
            "//rs/nns/sns-wasm:Cargo.toml",
            "//rs/nns/test_utils:Cargo.toml",
            "//rs/nns/test_utils_macros:Cargo.toml",
            "//rs/observability/config_writer_common:Cargo.toml",
            "//rs/observability/log_vector_config_generator:Cargo.toml",
            "//rs/observability/multiservice_discovery:Cargo.toml",
            "//rs/observability/multiservice_discovery_downloader:Cargo.toml",
            "//rs/observability/multiservice_discovery_shared:Cargo.toml",
            "//rs/observability/node_status_updater:Cargo.toml",
            "//rs/observability/prometheus_config_updater:Cargo.toml",
            "//rs/observability/service_discovery:Cargo.toml",
            "//rs/observability/vector_config_generator:Cargo.toml",
            "//rs/orchestrator/dashboard:Cargo.toml",
            "//rs/orchestrator/registry_replicator:Cargo.toml",
            "//rs/orchestrator:Cargo.toml",
            "//rs/p2p/consensus_manager:Cargo.toml",
            "//rs/p2p/memory_transport:Cargo.toml",
            "//rs/p2p/peer_manager:Cargo.toml",
            "//rs/p2p/quic_transport:Cargo.toml",
            "//rs/p2p/state_sync_manager:Cargo.toml",
            "//rs/p2p/test_utils:Cargo.toml",
            "//rs/p2p:Cargo.toml",
            "//rs/phantom_newtype:Cargo.toml",
            "//rs/pocket_ic_server:Cargo.toml",
            "//rs/prep:Cargo.toml",
            "//rs/protobuf/generator:Cargo.toml",
            "//rs/protobuf:Cargo.toml",
            "//rs/recovery/subnet_splitting:Cargo.toml",
            "//rs/recovery:Cargo.toml",
            "//rs/registry/admin-derive:Cargo.toml",
            "//rs/registry/admin:Cargo.toml",
            "//rs/registry/canister/protobuf_generator:Cargo.toml",
            "//rs/registry/canister:Cargo.toml",
            "//rs/registry/client:Cargo.toml",
            "//rs/registry/fake:Cargo.toml",
            "//rs/registry/helpers:Cargo.toml",
            "//rs/registry/keys:Cargo.toml",
            "//rs/registry/local_registry:Cargo.toml",
            "//rs/registry/local_store/artifacts:Cargo.toml",
            "//rs/registry/local_store:Cargo.toml",
            "//rs/registry/nns_data_provider:Cargo.toml",
            "//rs/registry/nns_data_provider_wrappers:Cargo.toml",
            "//rs/registry/proto/generator:Cargo.toml",
            "//rs/registry/proto:Cargo.toml",
            "//rs/registry/proto_data_provider:Cargo.toml",
            "//rs/registry/provisional_whitelist:Cargo.toml",
            "//rs/registry/regedit:Cargo.toml",
            "//rs/registry/routing_table:Cargo.toml",
            "//rs/registry/subnet_features:Cargo.toml",
            "//rs/registry/subnet_type:Cargo.toml",
            "//rs/registry/transport/protobuf_generator:Cargo.toml",
            "//rs/registry/transport:Cargo.toml",
            "//rs/replay:Cargo.toml",
            "//rs/replica/setup_ic_network:Cargo.toml",
            "//rs/replica:Cargo.toml",
            "//rs/replica_tests:Cargo.toml",
            "//rs/replicated_state:Cargo.toml",
            "//rs/rosetta-api/hardware_wallet_tests:Cargo.toml",
            "//rs/rosetta-api/icp_ledger/archive:Cargo.toml",
            "//rs/rosetta-api/icp_ledger/index:Cargo.toml",
            "//rs/rosetta-api/icp_ledger/ledger:Cargo.toml",
            "//rs/rosetta-api/icp_ledger/protobuf_generator:Cargo.toml",
            "//rs/rosetta-api/icp_ledger:Cargo.toml",
            "//rs/rosetta-api/icrc1/archive:Cargo.toml",
            "//rs/rosetta-api/icrc1/benchmark/generator:Cargo.toml",
            "//rs/rosetta-api/icrc1/benchmark/worker:Cargo.toml",
            "//rs/rosetta-api/icrc1/index-ng:Cargo.toml",
            "//rs/rosetta-api/icrc1/index:Cargo.toml",
            "//rs/rosetta-api/icrc1/ledger/sm-tests:Cargo.toml",
            "//rs/rosetta-api/icrc1/ledger:Cargo.toml",
            "//rs/rosetta-api/icrc1/rosetta/client:Cargo.toml",
            "//rs/rosetta-api/icrc1/rosetta/runner:Cargo.toml",
            "//rs/rosetta-api/icrc1/rosetta:Cargo.toml",
            "//rs/rosetta-api/icrc1/test_utils:Cargo.toml",
            "//rs/rosetta-api/icrc1/tokens_u256:Cargo.toml",
            "//rs/rosetta-api/icrc1/tokens_u64:Cargo.toml",
            "//rs/rosetta-api/icrc1:Cargo.toml",
            "//rs/rosetta-api/ledger_canister_blocks_synchronizer/test_utils:Cargo.toml",
            "//rs/rosetta-api/ledger_canister_blocks_synchronizer:Cargo.toml",
            "//rs/rosetta-api/ledger_canister_core:Cargo.toml",
            "//rs/rosetta-api/ledger_core:Cargo.toml",
            "//rs/rosetta-api/test_utils:Cargo.toml",
            "//rs/rosetta-api/tvl/xrc_mock:Cargo.toml",
            "//rs/rosetta-api/tvl:Cargo.toml",
            "//rs/rosetta-api:Cargo.toml",
            "//rs/rust_canisters/call_tree_test:Cargo.toml",
            "//rs/rust_canisters/canister_creator:Cargo.toml",
            "//rs/rust_canisters/canister_log:Cargo.toml",
            "//rs/rust_canisters/canister_serve:Cargo.toml",
            "//rs/rust_canisters/canister_test:Cargo.toml",
            "//rs/rust_canisters/dfn_candid:Cargo.toml",
            "//rs/rust_canisters/dfn_core:Cargo.toml",
            "//rs/rust_canisters/dfn_http:Cargo.toml",
            "//rs/rust_canisters/dfn_http_metrics:Cargo.toml",
            "//rs/rust_canisters/dfn_json:Cargo.toml",
            "//rs/rust_canisters/dfn_macro:Cargo.toml",
            "//rs/rust_canisters/dfn_protobuf:Cargo.toml",
            "//rs/rust_canisters/ecdsa:Cargo.toml",
            "//rs/rust_canisters/http_types:Cargo.toml",
            "//rs/rust_canisters/memory_test:Cargo.toml",
            "//rs/rust_canisters/on_wire:Cargo.toml",
            "//rs/rust_canisters/pmap:Cargo.toml",
            "//rs/rust_canisters/proxy_canister:Cargo.toml",
            "//rs/rust_canisters/response_payload_test:Cargo.toml",
            "//rs/rust_canisters/stable_reader:Cargo.toml",
            "//rs/rust_canisters/stable_structures:Cargo.toml",
            "//rs/rust_canisters/statesync_test:Cargo.toml",
            "//rs/rust_canisters/tests:Cargo.toml",
            "//rs/rust_canisters/xnet_test:Cargo.toml",
            "//rs/scenario_tests:Cargo.toml",
            "//rs/sns/cli:Cargo.toml",
            "//rs/sns/governance/protobuf_generator:Cargo.toml",
            "//rs/sns/governance:Cargo.toml",
            "//rs/sns/init/protobuf_generator:Cargo.toml",
            "//rs/sns/init:Cargo.toml",
            "//rs/sns/integration_tests:Cargo.toml",
            "//rs/sns/root/protobuf_generator:Cargo.toml",
            "//rs/sns/root:Cargo.toml",
            "//rs/sns/swap:Cargo.toml",
            "//rs/sns/test_utils:Cargo.toml",
            "//rs/starter:Cargo.toml",
            "//rs/state_layout:Cargo.toml",
            "//rs/state_machine_tests:Cargo.toml",
            "//rs/state_manager:Cargo.toml",
            "//rs/state_tool:Cargo.toml",
            "//rs/sys:Cargo.toml",
            "//rs/system_api:Cargo.toml",
            "//rs/test_utilities/artifact_pool:Cargo.toml",
            "//rs/test_utilities/compare_dirs:Cargo.toml",
            "//rs/test_utilities/execution_environment:Cargo.toml",
            "//rs/test_utilities/load_wasm:Cargo.toml",
            "//rs/test_utilities/logger:Cargo.toml",
            "//rs/test_utilities/metrics:Cargo.toml",
            "//rs/test_utilities/serialization:Cargo.toml",
            "//rs/test_utilities/tmpdir:Cargo.toml",
            "//rs/test_utilities:Cargo.toml",
            "//rs/tests/httpbin-rs:Cargo.toml",
            "//rs/tests/nns/ic_mainnet_nns_recovery:Cargo.toml",
            "//rs/tests/nns/sns:Cargo.toml",
            "//rs/tests/test_canisters/http_counter:Cargo.toml",
            "//rs/tests/test_canisters/kv_store:Cargo.toml",
            "//rs/tests/test_canisters/message:Cargo.toml",
            "//rs/tests/testing_verification/testnets:Cargo.toml",
            "//rs/tests/testing_verification/wabt-tests:Cargo.toml",
            "//rs/tests:Cargo.toml",
            "//rs/transport/test_utils:Cargo.toml",
            "//rs/transport:Cargo.toml",
            "//rs/tree_deserializer:Cargo.toml",
            "//rs/types/base_types/protobuf_generator:Cargo.toml",
            "//rs/types/base_types:Cargo.toml",
            "//rs/types/error_types:Cargo.toml",
            "//rs/types/ic00_types:Cargo.toml",
            "//rs/types/types:Cargo.toml",
            "//rs/types/types_test_utils:Cargo.toml",
            "//rs/types/wasm_types:Cargo.toml",
            "//rs/universal_canister/lib:Cargo.toml",
            "//rs/utils/ensure:Cargo.toml",
            "//rs/utils/lru_cache:Cargo.toml",
            "//rs/utils/rustfmt:Cargo.toml",
            "//rs/utils:Cargo.toml",
            "//rs/validator/ingress_message/test_canister:Cargo.toml",
            "//rs/validator/ingress_message:Cargo.toml",
            "//rs/validator:Cargo.toml",
            "//rs/workload_generator:Cargo.toml",
            "//rs/xnet/endpoint:Cargo.toml",
            "//rs/xnet/hyper:Cargo.toml",
            "//rs/xnet/payload_builder:Cargo.toml",
            "//rs/xnet/uri:Cargo.toml",
        ],
        packages = {
            # Used in fuzzing and set as optional.
            "arbitrary": crate.spec(
                version = "=1.3.0",
            ),
            # Used in a rust canister only.
            "ethabi": crate.spec(
                version = "18.0.0",
            ),
            # Used as binary only.
            "ic-wasm": crate.spec(
                version = "^0.4.0",
                features = [
                    "exe",
                ],
                default_features = False,
            ),
            # Used by fuzzing and not set in any Crate.toml.
            "wasm-smith": crate.spec(
                version = "^0.12.4",
            ),
        },
        splicing_config = splicing_config(
            resolver_version = "2",
        ),
    )
