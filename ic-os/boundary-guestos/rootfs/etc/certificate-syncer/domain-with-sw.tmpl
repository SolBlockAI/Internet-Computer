server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name {name};

    ssl_certificate     {ssl_certificate_path};
    ssl_certificate_key {ssl_certificate_key_path};

    location / {
        # Observability
        include "includes/request_id.conf";

        # Prereqs
        include "includes/method_get.conf";
        include "includes/empty_routes_503.conf";
        include "includes/denylist_451.conf";

        if ($is_bot = "1") {
            rewrite ^(.*)$ /seo/$1 last;
        }

        rewrite ^(.*)$ /sw/$1 last;
    }

    # Serve Service-Worker related files
    # This internal location is needed because we ran into an odd bug
    # where a seemingly random if-statement made try_files fail with a 404
    #
    # See https://dfinity.atlassian.net/browse/BOUN-534
    location /sw/ {
        internal;
        include "includes/gzip.conf";
        rewrite ^/sw/(.*)$ $1 break;

        # Observability
        include "includes/request_id.conf";

        # Canister / Gateway (Header)
        add_header "X-Ic-Gateway" "$primary_api_domain" always;
        add_header "X-Ic-Canister-Id" "$inferred_canister_id" always;

        # Canister / Gateway (Cookie)
        add_header "Set-Cookie" "__Secure-IcGateway=$primary_api_domain; Path=/; SameSite=Strict; Secure" always;
        add_header "Set-Cookie" "__Secure-IcCanisterId=$inferred_canister_id; Path=/; SameSite=Strict; Secure" always;

        try_files $uri /index.html;
    }

    location /seo/ {
        internal;
        rewrite ^/seo/(.*)$ $1 break;

        # Observability
        include "includes/request_id.conf";

        # CORS
        set $cors_allow_methods "HEAD, GET, OPTIONS";
        include "includes/cors_remove_proxy.conf";
        include "includes/cors.conf";
        include "includes/options.conf";

        # Update the Host header so that icx-proxy is able to process the request
        proxy_set_header Host "$inferred_canister_id.$primary_domain";

        proxy_pass http://$icx_proxy;
        include "includes/proxy_headers.conf";
        include "/run/ic-node/etc/nginx/conf.d/proxy_headers_seo.conf";

        add_header "X-Cache-Status" $upstream_cache_status;
    }

    location /_/raw/ {
        # Observability
        include "includes/request_id.conf";

        # Prereqs
        include "includes/empty_routes_503.conf";
        include "includes/denylist_451.conf";

        # CORS
        set $cors_allow_methods "HEAD, GET, OPTIONS";
        include "includes/cors_remove_proxy.conf";
        include "includes/cors.conf";
        include "includes/options.conf";

        # Update the Host header so that icx-proxy is able to process the request
        proxy_set_header Host "$inferred_canister_id.$primary_domain";

        proxy_pass http://$icx_proxy;
        include "includes/proxy_headers.conf";
        include "/run/ic-node/etc/nginx/conf.d/proxy_headers_underscore.conf";

        add_header "X-Cache-Status" $upstream_cache_status;
    }
}
