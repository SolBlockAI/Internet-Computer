---
# Add the delay using tc
#

- name: Check that drop_percentage arg is defined.
  fail: msg="The variable 'drops_percentage' is not defined"
  when:
    - drops_percentage is undefined

- name: Check that drop_percentage is within bounds.
  assert:
    that:
      - drops_percentage|int <= 100
      - drops_percentage|int > 0
    fail_msg: "'drops_percentage' must be between 1 and 100"

- name: Add network drops
  changed_when: true
  # This command adds packet drops, but ensures that SSH is not affected
  # It works by creating two priorities, and sends all traffic (priomap) to the
  # higher priority. Then, filter redirects the IC traffic to the lower priority
  # lane. We have to do it this way, because the higher prio lane is always consulted
  # first, and we expect more IC network traffic than any other (SSH, Prometheus, ...).
  shell: |
    set -exuo pipefail
    if [[ -n "{{ ic_iface_ipv6 }}" ]]; then
      tc qdisc add dev {{ ic_iface_ipv6 }} root handle 1: prio bands 2 priomap 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
      tc qdisc add dev {{ ic_iface_ipv6 }} parent 1:1 handle 10: sfq perturb 10
      tc qdisc add dev {{ ic_iface_ipv6 }} parent 1:2 handle 20: netem loss {{ drops_percentage }}%
      tc filter add dev {{ ic_iface_ipv6 }} protocol ipv6 parent 1:0 prio 1 u32 match ip6 dport {{ p2p_listen_port }} 0xFFFF flowid 1:2
    fi
  args:
    executable: /bin/bash
