load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_test")

package(default_visibility = ["//visibility:public"])

DEPENDENCIES = [
    "//rs/async_utils",
    "//rs/crypto/utils/threshold_sig_der",
    "//rs/observability/multiservice_discovery_shared",
    "//rs/observability/service_discovery",
    "//rs/registry/client",
    "//rs/types/types",
    "//rs/utils",
    "@crate_index//:base64",
    "@crate_index//:clap",
    "@crate_index//:crossbeam",
    "@crate_index//:crossbeam-channel",
    "@crate_index//:erased-serde",
    "@crate_index//:futures-util",
    "@crate_index//:humantime",
    "@crate_index//:regex",
    "@crate_index//:serde",
    "@crate_index//:serde_json",
    "@crate_index//:slog",
    "@crate_index//:slog-async",
    "@crate_index//:slog-term",
    "@crate_index//:tokio",
    "@crate_index//:url",
    "@crate_index//:warp",
]

MACRO_DEPENDENCIES = []

DEV_DEPENDENCIES = []

MACRO_DEV_DEPENDENCIES = []

ALIASES = {}

rust_binary(
    name = "multiservice_discovery",
    srcs = glob(["src/**/*.rs"]),
    aliases = ALIASES,
    crate_name = "multiservice_discovery",
    edition = "2021",
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = DEPENDENCIES,
)

rust_test(
    name = "multiservice_discovery_test",
    aliases = ALIASES,
    crate = ":multiservice_discovery",
    edition = "2021",
    proc_macro_deps = MACRO_DEPENDENCIES + MACRO_DEV_DEPENDENCIES,
    deps = DEPENDENCIES + DEV_DEPENDENCIES,
)
