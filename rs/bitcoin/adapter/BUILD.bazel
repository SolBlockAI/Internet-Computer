load("@crate_index//:defs.bzl", "all_crate_deps")
load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_library", "rust_test", "rust_test_suite")
load("//bazel:defs.bzl", "rust_bench")

package(default_visibility = ["//visibility:private"])

DEPENDENCIES = all_crate_deps() + [
    "//rs/async_utils",
    "//rs/bitcoin/service",
    "//rs/config",
    "//rs/monitoring/adapter_metrics_server",
    "//rs/monitoring/logger",
    "//rs/monitoring/metrics",
]

MACRO_DEPENDENCIES = []

DEV_DEPENDENCIES = [
    "@crate_index//:tempfile",
    "@crate_index//:bitcoincore-rpc",
    "@crate_index//:bitcoind",
    "@crate_index//:criterion",
    "@crate_index//:ic-btc-interface",
    "//rs/bitcoin/adapter/test_utils",
    "//rs/bitcoin/client",
    "//rs/bitcoin/types/internal",
    "//rs/interfaces/adapter_client",
    "//rs/test_utilities/logger",
]

MACRO_DEV_DEPENDENCIES = []

ALIASES = {}

rust_library(
    name = "adapter",
    srcs = glob(["src/**"]),
    aliases = ALIASES,
    crate_name = "ic_btc_adapter",
    proc_macro_deps = MACRO_DEPENDENCIES,
    version = "0.1.0",
    deps = DEPENDENCIES,
)

rust_binary(
    name = "ic-btc-adapter",
    srcs = ["src/main.rs"],
    aliases = ALIASES,
    proc_macro_deps = MACRO_DEPENDENCIES,
    visibility = ["//publish:__subpackages__"],
    deps = DEPENDENCIES + [":adapter"],
)

rust_binary(
    name = "adapter-stress-test",
    srcs = ["src/stress_test.rs"],
    aliases = ALIASES,
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = DEPENDENCIES + [":adapter"],
)

rust_test(
    name = "adapter_test",
    crate = ":adapter",
    data = [
        "test_data/first_2500_mainnet_headers.json",
        "test_data/first_2500_testnet_headers.json",
    ],
    tags = ["requires-network"],
    deps = DEV_DEPENDENCIES,
)

rust_test_suite(
    name = "adapter_integration",
    srcs = glob(["tests/**/*.rs"]),
    aliases = ALIASES,
    data = [
        "@bitcoin-core//:bitcoin-core",
        "@bitcoin-core//:bitcoind",
    ],
    env = {
        "BITCOIN_CORE_PATH": "$(rootpath @bitcoin-core//:bitcoind)",
    },
    proc_macro_deps = MACRO_DEPENDENCIES + MACRO_DEV_DEPENDENCIES,
    tags = ["requires-network"],
    deps = [":adapter"] + DEPENDENCIES + DEV_DEPENDENCIES,
)

rust_bench(
    name = "e2e_bench",
    testonly = True,
    srcs = ["benches/e2e.rs"],
    aliases = ALIASES,
    proc_macro_deps = MACRO_DEPENDENCIES + MACRO_DEV_DEPENDENCIES,
    deps = DEPENDENCIES + DEV_DEPENDENCIES + [":adapter"],
)
