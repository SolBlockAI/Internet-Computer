syntax = "proto3";

package p2p.v1;

message GossipMessage {
  oneof body {
    GossipAdvert advert = 1;
    GossipChunkRequest chunk_request = 2;
    GossipChunk chunk = 3;
    ArtifactFilter retransmission_request = 5;
  }
  reserved 4;
}

message GossipAdvert {
  bytes attribute = 1;
  uint64 size = 2;
  bytes artifact_id = 3;
  bytes integrity_hash = 4;
}

message GossipChunkRequest {
  bytes artifact_id = 1;
  uint32 chunk_id = 2;
  bytes integrity_hash = 3;
}

message GossipChunk {
  GossipChunkRequest request = 6;
  oneof response {
    ArtifactChunk chunk = 3;
    P2PError error = 4;
  }
  reserved 1, 2, 5;
}

enum P2PError {
  P2P_ERROR_UNSPECIFIED = 0;
  P2P_ERROR_NOT_FOUND = 1;
}

message ArtifactFilter {
  ConsensusMessageFilter consensus_filter = 1;
  CertificationMessageFilter certification_message_filter = 3;
  StateSyncFilter state_sync_filter = 4;
  reserved 2;
}

message ConsensusMessageFilter {
  uint64 height = 1;
}

message CertificationMessageFilter {
  uint64 height = 1;
}

message StateSyncFilter {
  uint64 height = 1;
}

message ArtifactChunk {
  repeated bytes witnesses = 1;
  oneof data {
    bytes artifact = 2; // TODO(P2P-483): bincode-encoded Artifact to proto-encoding
    bytes chunk = 3;
  }
}
