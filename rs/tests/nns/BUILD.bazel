load("//rs/tests:common.bzl", "BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS", "DEPENDENCIES", "GRAFANA_RUNTIME_DEPS", "GUESTOS_RUNTIME_DEPS", "MACRO_DEPENDENCIES", "MAINNET_REVISION_RUNTIME_DEPS", "NNS_CANISTER_RUNTIME_DEPS")
load("//rs/tests:system_tests.bzl", "system_test")

package(default_visibility = ["//visibility:public"])

exports_files([
    "secret_key.pem",
])

# nns_upgrade_test is a manual system-test that deploys an IC with a NNS that is recovered from the latest mainnet state.
system_test(
    name = "nns_upgrade_test",
    env_inherit = ["SSH_AUTH_SOCK"],
    tags = [
        "manual",
        "no-cache",
        "no-sandbox",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps =
        GUESTOS_RUNTIME_DEPS +
        NNS_CANISTER_RUNTIME_DEPS +
        BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS +
        MAINNET_REVISION_RUNTIME_DEPS +
        GRAFANA_RUNTIME_DEPS + [
            ":secret_key.pem",
            "//rs/replay:ic-replay",
            "//rs/sns/cli:sns",
            "//rs/tests:recovery/binaries",
        ],
    deps = [
        "//rs/tests",
        "//rs/tests/nns/ic_mainnet_nns_recovery",
        "@crate_index//:anyhow",
    ],
)

system_test(
    name = "create_subnet_pre_master_test",
    proc_macro_deps = MACRO_DEPENDENCIES,
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + NNS_CANISTER_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "nns_token_balance_test",
    proc_macro_deps = MACRO_DEPENDENCIES,
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + NNS_CANISTER_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "nns_cycles_minting_test",
    proc_macro_deps = MACRO_DEPENDENCIES,
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + NNS_CANISTER_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "nns_cycles_minting_multi_app_subnets_test",
    proc_macro_deps = MACRO_DEPENDENCIES,
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + NNS_CANISTER_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "node_removal_from_registry_test",
    proc_macro_deps = MACRO_DEPENDENCIES,
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + NNS_CANISTER_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "bitcoin_set_config_proposal_test",
    proc_macro_deps = MACRO_DEPENDENCIES,
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + NNS_CANISTER_RUNTIME_DEPS + ["@btc_canister//file"],
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "certified_registry_test",
    proc_macro_deps = MACRO_DEPENDENCIES,
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + NNS_CANISTER_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)
