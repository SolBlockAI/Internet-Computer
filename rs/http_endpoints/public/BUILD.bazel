load("@crate_index//:defs.bzl", "all_crate_deps")
load("@rules_rust//cargo:cargo_build_script.bzl", "cargo_build_script")
load("@rules_rust//rust:defs.bzl", "rust_library", "rust_test")
load("//bazel:defs.bzl", "rust_test_suite_with_extra_srcs")

package(default_visibility = ["//rs/replica:__subpackages__"])

DEPENDENCIES = all_crate_deps() + [
    "//rs/async_utils",
    "//rs/certification",
    "//rs/config",
    "//rs/crypto/interfaces/sig_verification",
    "//rs/crypto/tls_interfaces",
    "//rs/crypto/tree_hash",
    "//rs/crypto/utils/threshold_sig_der",
    "//rs/interfaces",
    "//rs/interfaces/registry",
    "//rs/interfaces/state_manager",
    "//rs/monitoring/logger",
    "//rs/monitoring/metrics",
    "//rs/monitoring/pprof",
    "//rs/registry/helpers",
    "//rs/registry/provisional_whitelist",
    "//rs/registry/subnet_type",
    "//rs/replicated_state",
    "//rs/phantom_newtype",
    "//rs/types/error_types",
    "//rs/types/types",
    "//rs/validator",
] + select({
    "@rules_rust//rust/platform:linux": [
        "//rs/monitoring/backtrace",
    ],
    "//conditions:default": [],
})

MACRO_DEPENDENCIES = [
    "@crate_index//:async-trait",
]

BUILD_DEPENDENCIES = []

DEV_DEPENDENCIES = all_crate_deps(normal_dev = True) + [
    "//rs/canister_client",
    "//rs/canister_client/sender",
    "//rs/canonical_state",
    "//rs/certification/test-utils",
    "//rs/crypto/tls_interfaces/mocks",
    "//rs/interfaces/registry/mocks",
    "//rs/interfaces/state_manager/mocks",
    "//rs/protobuf",
    "//rs/registry/keys",
    "//rs/registry/routing_table",
    "//rs/test_utilities",
]

MACRO_DEV_DEPENDENCIES = []

ALIASES = {}

cargo_build_script(
    name = "build_script",
    srcs = ["build.rs"],
    aliases = ALIASES,
    data = ["templates/dashboard.html"],  # build script data (e.g. template files) goes here
    deps = BUILD_DEPENDENCIES,
)

rust_library(
    name = "public",
    srcs = glob(["src/**"]),
    aliases = ALIASES,
    crate_features = select({
        "//bazel:malicious_code_enabled": ["malicious_code"],
        "//conditions:default": [],
    }),
    crate_name = "ic_http_endpoints_public",
    proc_macro_deps = MACRO_DEPENDENCIES,
    version = "0.8.0",
    deps = DEPENDENCIES + [":build_script"],
)

rust_test(
    name = "public_test",
    aliases = ALIASES,
    crate = ":public",
    proc_macro_deps = MACRO_DEPENDENCIES + MACRO_DEV_DEPENDENCIES,
    deps = DEPENDENCIES + DEV_DEPENDENCIES + [":build_script"],
)

rust_test_suite_with_extra_srcs(
    name = "public_integration",
    size = "small",
    srcs = glob(
        ["tests/**"],
        exclude = ["tests/common/**"],
    ),
    extra_srcs = glob(["tests/common/**"]),
    proc_macro_deps = MACRO_DEPENDENCIES + MACRO_DEV_DEPENDENCIES,
    deps = [":public"] + DEPENDENCIES + DEV_DEPENDENCIES,
)
