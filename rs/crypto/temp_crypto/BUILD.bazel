load("@crate_index//:defs.bzl", "all_crate_deps")
load("@rules_rust//rust:defs.bzl", "rust_library", "rust_test", "rust_test_suite")

package(default_visibility = ["//visibility:public"])

DEPENDENCIES = all_crate_deps() + [
    "//rs/config",
    "//rs/crypto",
    "//rs/crypto/interfaces/sig_verification",
    "//rs/crypto/internal/crypto_service_provider",
    "//rs/crypto/internal/logmon",
    "//rs/crypto/node_key_generation",
    "//rs/crypto/tls_interfaces",
    "//rs/crypto/temp_crypto/temp_vault",
    "//rs/crypto/utils/basic_sig",
    "//rs/crypto/utils/time",
    "//rs/interfaces",
    "//rs/interfaces/registry",
    "//rs/monitoring/logger",
    "//rs/protobuf",
    "//rs/registry/fake",
    "//rs/registry/keys",
    "//rs/registry/proto_data_provider",
    "//rs/types/base_types",
    "//rs/types/types",
]

MACRO_DEPENDENCIES = [
    "@crate_index//:async-trait",
]

DEV_DEPENDENCIES = all_crate_deps(normal_dev = True) + [
    "//rs/crypto/test_utils",
    "//rs/crypto/test_utils/reproducible_rng",
    "//rs/test_utilities",
    "//rs/types/types_test_utils",
]

MACRO_DEV_DEPENDENCIES = []

ALIASES = {}

rust_library(
    name = "temp_crypto",
    srcs = glob(["src/**/*.rs"]),
    aliases = ALIASES,
    crate_name = "ic_crypto_temp_crypto",
    edition = "2021",
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = DEPENDENCIES,
)

rust_test(
    name = "temp_crypto_test",
    aliases = ALIASES,
    crate = ":temp_crypto",
    edition = "2021",
    proc_macro_deps = MACRO_DEPENDENCIES + MACRO_DEV_DEPENDENCIES,
    deps = DEPENDENCIES + DEV_DEPENDENCIES,
)

rust_test_suite(
    name = "test_suite",
    srcs = glob(["tests/**"]),
    edition = "2021",
    proc_macro_deps = MACRO_DEPENDENCIES + MACRO_DEV_DEPENDENCIES,
    deps = [":temp_crypto"] + DEPENDENCIES + DEV_DEPENDENCIES,
)
