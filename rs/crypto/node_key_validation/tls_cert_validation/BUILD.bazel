load("@crate_index//:defs.bzl", "all_crate_deps")
load("@rules_rust//rust:defs.bzl", "rust_library", "rust_test")

package(default_visibility = ["//visibility:public"])

########################################################
# Because this crate is used in a canister, we can only
# use dependencies that can be compiled to WebAssembly.
########################################################
DEPENDENCIES = all_crate_deps() + [
    "//rs/crypto/internal/crypto_lib/basic_sig/ed25519",
    "//rs/crypto/internal/crypto_lib/types",
    "//rs/protobuf",
    "//rs/types/base_types",
    "//rs/types/types",
]

MACRO_DEPENDENCIES = []

DEV_DEPENDENCIES = [
    "//rs/crypto/test_utils/tls",
    "//rs/crypto/test_utils/keys",
    "@crate_index//:assert_matches",
    "@crate_index//:curve25519-dalek",
]

MACRO_DEV_DEPENDENCIES = []

ALIASES = {}

rust_library(
    name = "tls_cert_validation",
    srcs = glob(["src/**"]),
    aliases = ALIASES,
    crate_name = "ic_crypto_tls_cert_validation",
    proc_macro_deps = MACRO_DEPENDENCIES,
    version = "0.8.0",
    deps = DEPENDENCIES,
)

rust_test(
    name = "tls_cert_validation_test",
    aliases = ALIASES,
    crate = ":tls_cert_validation",
    proc_macro_deps = MACRO_DEPENDENCIES + MACRO_DEV_DEPENDENCIES,
    deps = DEPENDENCIES + DEV_DEPENDENCIES,
)
