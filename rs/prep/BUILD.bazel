load("@crate_index//:defs.bzl", "all_crate_deps")
load("@rules_rust//rust:defs.bzl", "rust_binary", "rust_library", "rust_test")

package(default_visibility = ["//visibility:public"])

DEPENDENCIES = all_crate_deps() + [
    "//rs/config",
    "//rs/constants",
    "//rs/crypto",
    "//rs/nns/common",
    "//rs/crypto/node_key_generation",
    "//rs/crypto/node_key_validation",
    "//rs/crypto/test_utils/ni-dkg",
    "//rs/http_utils",
    "//rs/interfaces/registry",
    "//rs/monitoring/logger",
    "//rs/protobuf",
    "//rs/registry/client",
    "//rs/registry/keys",
    "//rs/registry/local_store",
    "//rs/registry/proto_data_provider",
    "//rs/registry/provisional_whitelist",
    "//rs/registry/routing_table",
    "//rs/registry/subnet_type",
    "//rs/registry/transport",
    "//rs/types/ic00_types",
    "//rs/types/types",
]

MACRO_DEPENDENCIES = []

DEV_DEPENDENCIES = [
    "@crate_index//:assert_matches",
    "@crate_index//:pretty_assertions",
]

MACRO_DEV_DEPENDENCIES = []

ALIASES = {}

rust_library(
    name = "prep",
    srcs = glob(["src/**/*.rs"]),
    aliases = ALIASES,
    crate_name = "ic_prep_lib",
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = DEPENDENCIES,
)

rust_binary(
    name = "ic-prep",
    srcs = ["src/bin/prep.rs"],
    aliases = ALIASES,
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = DEPENDENCIES + [":prep"],
)

rust_binary(
    name = "ic-principal-id",
    srcs = ["src/bin/principal_id.rs"],
    aliases = ALIASES,
    proc_macro_deps = MACRO_DEPENDENCIES,
    deps = DEPENDENCIES + [":prep"],
)

rust_test(
    name = "prep_test",
    aliases = ALIASES,
    crate = ":prep",
    proc_macro_deps = MACRO_DEPENDENCIES + MACRO_DEV_DEPENDENCIES,
    deps = DEPENDENCIES + DEV_DEPENDENCIES,
)

rust_test(
    name = "prep_bin_tests",
    srcs = glob(["src/**/*.rs"]),
    aliases = ALIASES,
    crate_root = "src/bin/prep.rs",
    proc_macro_deps = MACRO_DEPENDENCIES + MACRO_DEV_DEPENDENCIES,
    deps = [":prep"] + DEPENDENCIES + DEV_DEPENDENCIES,
)

# Disabled due to https://github.com/bazelbuild/rules_rust/issues/1233
# rust_doc_test(
#   name = "prep_doc_test",
#   crate = ":prep",
# )
