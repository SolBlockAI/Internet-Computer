load("@rules_rust//rust:defs.bzl", "rust_library")

package(default_visibility = ["//visibility:public"])

# See rs/nervous_system/feature_test.md
BASE_DEPENDENCIES = [
    "//packages/icrc-ledger-types:icrc_ledger_types",
    "//rs/canister_client/sender",
    "//rs/config",
    "//rs/crypto/node_key_generation",
    "//rs/crypto/node_key_validation",
    "//rs/crypto/sha2",
    "//rs/nervous_system/clients",
    "//rs/nervous_system/common",
    "//rs/nervous_system/common/test_keys",
    "//rs/nervous_system/root",
    "//rs/nns/cmc",
    "//rs/nns/common",
    "//rs/nns/constants",
    "//rs/nns/gtc_accounts",
    "//rs/nns/handlers/lifeline/impl:lifeline",
    "//rs/nns/handlers/lifeline/interface",
    "//rs/protobuf",
    "//rs/registry/canister",
    "//rs/registry/keys",
    "//rs/registry/routing_table",
    "//rs/registry/subnet_type",
    "//rs/registry/transport",
    "//rs/rosetta-api/icp_ledger",
    "//rs/rosetta-api/icrc1",
    "//rs/rust_canisters/canister_test",
    "//rs/rust_canisters/dfn_candid",
    "//rs/rust_canisters/dfn_core",
    "//rs/rust_canisters/dfn_json",
    "//rs/rust_canisters/on_wire",
    "//rs/sns/swap",
    "//rs/state_machine_tests",
    "//rs/test_utilities",
    "//rs/types/base_types",
    "//rs/types/ic00_types",
    "//rs/types/types",
    "//rs/utils",
    "@crate_index//:assert_matches",
    "@crate_index//:candid",
    "@crate_index//:futures",
    "@crate_index//:ic-btc-interface",
    "@crate_index//:maplit",
    "@crate_index//:num-traits",
    "@crate_index//:prost",
    "@crate_index//:serde",
    "@crate_index//:tokio",
    "@crate_index//:walrus",
]

# Each target declared in this file may choose either these (release-ready)
# dependencies (`DEPENDENCIES`), or `DEPENDENCIES_WITH_TEST_FEATURES` feature previews.
DEPENDENCIES = BASE_DEPENDENCIES + [
    "//rs/nns/governance",
    "//rs/nns/gtc",
    "//rs/nns/sns-wasm",
    "//rs/nns/handlers/root/impl:root",
    "//rs/sns/governance",
    "//rs/sns/init",
]

DEPENDENCIES_WITH_TEST_FEATURES = BASE_DEPENDENCIES + [
    "//rs/nns/governance:governance--test_feature",
    "//rs/nns/gtc:gtc--test_feature",
    "//rs/nns/sns-wasm:sns-wasm--test_feature",
    "//rs/nns/handlers/root/impl:root--test_feature",
    "//rs/sns/governance:governance--test_feature",
    "//rs/sns/init:init--test_feature",
]

MACRO_DEPENDENCIES = []

ALIASES = {}

rust_library(
    name = "test_utils",
    srcs = glob(["src/**"]),
    aliases = ALIASES,
    crate_name = "ic_nns_test_utils",
    proc_macro_deps = MACRO_DEPENDENCIES,
    version = "0.8.0",
    deps = DEPENDENCIES,
)

rust_library(
    name = "test_utils--test_feature",
    srcs = glob(["src/**"]),
    aliases = ALIASES,
    crate_features = ["test"],
    crate_name = "ic_nns_test_utils",
    proc_macro_deps = MACRO_DEPENDENCIES,
    version = "0.8.0",
    deps = DEPENDENCIES_WITH_TEST_FEATURES,
)
