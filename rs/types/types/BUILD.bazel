load("@rules_rust//rust:defs.bzl", "rust_doc", "rust_doc_test", "rust_library", "rust_test")

package(default_visibility = ["//visibility:public"])

DEPENDENCIES = [
    # Keep sorted.
    "//rs/bitcoin/types/internal",
    "//rs/constants",
    "//rs/crypto/internal/crypto_lib/types",
    "//rs/crypto/sha2",
    "//rs/crypto/tree_hash",
    "//rs/phantom_newtype",
    "//rs/protobuf",
    "//rs/types/base_types",
    "//rs/types/error_types",
    "//rs/types/ic00_types",
    "//rs/utils",
    "@crate_index//:base64",
    "@crate_index//:bincode",
    "@crate_index//:candid",
    "@crate_index//:hex",
    "@crate_index//:maplit",
    "@crate_index//:once_cell",
    "@crate_index//:prost",
    "@crate_index//:serde",
    "@crate_index//:serde_bytes",
    "@crate_index//:serde_cbor",
    "@crate_index//:serde_json",
    "@crate_index//:serde_with",
    "@crate_index//:strum",
    "@crate_index//:thiserror",
    "@crate_index//:thousands",
]

DEV_DEPENDENCIES = [
    # Keep sorted.
    "//rs/crypto/test_utils/canister_threshold_sigs",
    "//rs/crypto/test_utils/reproducible_rng",
    "@crate_index//:assert_matches",
    "@crate_index//:hex-literal",
    "@crate_index//:pretty_assertions",
    "@crate_index//:proptest",
    "@crate_index//:rand_0_8_4",
    "@crate_index//:rand_chacha_0_3_1",
    "@crate_index//:rusty-fork",
]

MACRO_DEV_DEPENDENCIES = [
    "//rs/types/exhaustive_derive",
    "@crate_index//:proptest-derive",
]

rust_library(
    name = "types",
    srcs = glob(["src/**"]),
    crate_name = "ic_types",
    proc_macro_deps = [
        "@crate_index//:derive_more",
        "@crate_index//:strum_macros",
    ],
    version = "0.8.0",
    deps = DEPENDENCIES + select({
        "@rules_rust//rust/platform:wasm32-unknown-unknown": [],
        "//conditions:default": ["@crate_index//:chrono"],
    }),
)

rust_test(
    name = "types_test",
    crate = ":types",
    proc_macro_deps = MACRO_DEV_DEPENDENCIES,
    deps = DEPENDENCIES + DEV_DEPENDENCIES,
)

rust_doc(
    name = "types_doc",
    crate = ":types",
)

rust_doc_test(
    name = "types_doc_test",
    crate = ":types",
)
